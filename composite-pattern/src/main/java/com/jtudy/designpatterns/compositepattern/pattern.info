- Composite Pattern is in the category of STRUCTURAL PATTERN.
- Composite pattern is used where we need to treat a group of objects in similar way as a single object. 
Composite pattern composes objects in term of a tree structure to represent part as well as whole hierarchy.

4 elements of composte pattern:
- Component
	- Implements default behavior for the interface common to all classes as appropriate.
	- Declares an interface for accessing and managing the child components.
- Leaf
	- Represents leaf objects in composition. A leaf has no children.
	- Defines behavior for primitive objects in the composition.
- Composite
	- Defines behavior for components having children.
	- Stores child component.
	- Implements child related operations in the component interface.
- Client
	- 	Manipulates objects in the composition through the component interface.

Client uses the component class interface to interact with objects in the composition structure. 
If recipient is the leaf then request will be handled directly. 
If recipient is a composite, then it usually forwards the request to its child for performing the additional operations.	